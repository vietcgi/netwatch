name: Build Release Binaries

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g., v0.1.0)'
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always

jobs:
  build-binaries:
    name: Build Release Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: netwatch
            asset_name: netwatch-linux-x86_64
            
          # Linux x86_64 (musl - static binary)  
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            artifact_name: netwatch
            asset_name: netwatch-linux-x86_64-musl
            
          # Linux ARM64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: netwatch
            asset_name: netwatch-linux-arm64
            
          # Linux ARM64 (musl - static binary)
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            artifact_name: netwatch
            asset_name: netwatch-linux-arm64-musl
            
          # macOS x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: netwatch
            asset_name: netwatch-macos-x86_64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.tag }}
      
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install cross (for cross-compilation)
      if: contains(matrix.target, 'musl') || contains(matrix.target, 'aarch64')
      run: cargo install cross --git https://github.com/cross-rs/cross

    - name: Build release binary
      run: |
        if [[ "${{ matrix.target }}" == *"musl"* ]] || [[ "${{ matrix.target }}" == "aarch64-unknown-linux-gnu" ]]; then
          cross build --release --target ${{ matrix.target }}
        else
          cargo build --release --target ${{ matrix.target }}
        fi

    - name: Strip binary (Linux/macOS)
      run: strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

    - name: Generate checksums and signatures
      run: |
        cd target/${{ matrix.target }}/release
        if [[ "${{ runner.os }}" == "macOS" ]]; then
          # macOS uses shasum instead of sha256sum
          shasum -a 256 ${{ matrix.artifact_name }} > ${{ matrix.asset_name }}.sha256
          shasum -a 512 ${{ matrix.artifact_name }} > ${{ matrix.asset_name }}.sha512
        else
          # Linux uses sha256sum/sha512sum
          sha256sum ${{ matrix.artifact_name }} > ${{ matrix.asset_name }}.sha256
          sha512sum ${{ matrix.artifact_name }} > ${{ matrix.asset_name }}.sha512
        fi
        
    - name: Create tarball with checksums
      run: |
        cd target/${{ matrix.target }}/release
        tar czf ${{ matrix.asset_name }}.tar.gz ${{ matrix.artifact_name }} ${{ matrix.asset_name }}.sha256 ${{ matrix.asset_name }}.sha512
        
    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ inputs.tag }}
        files: target/${{ matrix.target }}/release/${{ matrix.asset_name }}.tar.gz
        fail_on_unmatched_files: false